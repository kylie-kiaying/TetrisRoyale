version: '3.8'

services:
  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8001:8000"
    env_file:
      - ./auth-service/.env
    networks:
      - microservices-network

  player-service:
    build:
      context: ./player-service
    ports:
      - "8002:8000"
    env_file:
      - ./player-service/.env
    depends_on:
      - auth-service
    networks:
      - microservices-network

  tournament-service:
    build:
      context: ./tournament-service
    ports:
      - "8003:8000"
    env_file:
      - ./tournament-service/.env
    depends_on:
      - auth-service
      - player-service
    networks:
      - microservices-network

  matchmaking-service:
    build:
      context: ./matchmaking-service
    ports:
      - "8004:8000"
    env_file:
      - ./matchmaking-service/.env
    depends_on:
      - auth-service
      - player-service
      - tournament-service
    networks:
      - microservices-network

  rating-service:
    build:
      context: ./rating-service
    ports:
      - "8005:8000"
    env_file:
      - ./rating-service/.env
    depends_on:
      - auth-service
      - player-service
      - tournament-service
    networks:
      - microservices-network
    environment:
      PLAYER_SERVICE_URL: "http://player-service:8000"
      TOURNAMENT_SERVICE_URL: "http://tournament-service:8000"

  database:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tournament_db
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  db-data:

  
