version: '3.8'

services:
  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8001:8000"
    env_file:
      - ./auth-service/.env
    networks:
      - microservices-network

  player-service:
    build:
      context: ./player-service
    ports:
      - "8002:8000"
    env_file:
      - ./player-service/.env
    depends_on:
      - auth-service
    networks:
      - microservices-network

  tournament-service:
    build:
      context: ./tournament-service
    ports:
      - "8003:8000"
    env_file:
      - ./tournament-service/.env
    depends_on:
      - auth-service
    networks:
      - microservices-network

  matchmaking-service:
    build:
      context: ./matchmaking-service
    ports:
      - "8004:8000"
    env_file:
      - ./matchmaking-service/.env
    depends_on:
      - auth-service
      - player-service
      - tournament-service
    networks:
      - microservices-network

  rating-service:
    build:
      context: ./rating-service
    ports:
      - "8005:8000"
    env_file:
      - ./rating-service/.env
    depends_on:
      - auth-service
      - player-service
      - tournament-service
      - matchmaking-service
    networks:
      - microservices-network

  admin-service:
    build:
      context: ./admin-service
    ports:
      - "8006:8000"
    env_file:
      - ./admin-service/.env
    depends_on:
      - auth-service
    networks:
      - microservices-network

  analytics-service:
    build:
      context: ./analytics-service
    ports:
      - "8007:8000"
    env_file:
      - ./analytics-service/.env
    depends_on:
      - matchmaking-service
      - tournament-service
    networks:
      - microservices-network

  telegram-postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: telegram_bot
    volumes:
      - telegram_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  telegram-bot:
    build: ./telegram-bot-service
    env_file:
      - ./telegram-bot-service/.env
    depends_on:
      telegram-postgres:
        condition: service_healthy
      tournament-service:
        condition: service_started
      player-service:
        condition: service_started
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@telegram-postgres:5432/telegram_bot
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  telegram_postgres_data:

  
  
