import axios from 'axios';

export const fetchTournaments = async () => {
  try {
    const response = await axios.get('http://localhost:8003/tournaments'); // Adjust endpoint as necessary
    return response.data;
  } catch (error) {
    console.error('Error fetching tournaments:', error);
    return [];
  }
};

export const filterByRating = (tournaments, userRating, ratingRange = 100) => {
  return tournaments.filter(
    (tournament) =>
      Math.abs(tournament.recommended_rating - userRating) <= ratingRange
  );
};

export const filterEnrolledTournaments = (tournaments, playerId) => {
  return tournaments.filter(
    (tournament) =>
      !tournament.registrants.some((player) => player.player_id === playerId)
  );
};

// New filter for upcoming tournaments
export const filterUpcomingTournaments = (tournaments) => {
  return tournaments.filter((tournament) => tournament.status === 'upcoming');
};

export const getRecommendedTournaments = async (
  userRating,
  userId,
  ratingRange = 1000
) => {
  const allTournaments = await fetchTournaments();

  const filteredByStatus = filterUpcomingTournaments(allTournaments);
  const filteredByRating = filterByRating(
    filteredByStatus,
    userRating,
    ratingRange
  );

  return filterEnrolledTournaments(filteredByRating, userId).slice(0, 5);
};
